0:	input_addr
4:	output_addr
8:	n
12:	result
16:	const_1
20:	_start
30:	factorial_begin
45:	factorial_while
81:	factorial_end
---
mem[0..3]: 	80 00 00 00	@"input_addr"
mem[4..7]: 	84 00 00 00	@"output_addr"
mem[8..11]: 	00 00 00 00	@"n"
mem[12..15]: 	01 00 00 00	@"result"
mem[16..19]: 	01 00 00 00	@"const_1"
mem[20..24]: 	LoadInd 0 	@_start
mem[25..29]: 	StoreAddr 8
mem[30..34]: 	LoadAddr 16 	@factorial_begin
mem[35..39]: 	StoreAddr 12
mem[40..44]: 	LoadAddr 8
mem[45..49]: 	Beqz 81 	@factorial_while
mem[50..54]: 	LoadAddr 12
mem[55..57]: 	Mul 8
mem[58..62]: 	StoreAddr 12
mem[63..67]: 	LoadAddr 8
mem[68..70]: 	Sub 16
mem[71..75]: 	StoreAddr 8
mem[76..80]: 	Jmp 45
mem[81..85]: 	LoadAddr 12 	@factorial_end
mem[86..90]: 	StoreInd 4
mem[91..91]: 	Halt
---
